Definition: A linear data structure that follows the Last-In First-Out (LIFO) principle, where elements are inserted and removed from one end, called the top of the stack.
Operation:
1.  Push: Adding an element to the top of the stack.
2.  Pop: Removing and returning the top element.
3.  Peek(or Top): Returning the top element.
4.  isEmpty: Checking if the stack is empty.
5.  Size: Returning the no of elements in the stack.

Implementation:
1. Using array but having fixed size.
2. Using linkedlist but having dynamic size.
3. In c++, Java built-in function is available.

Advantage:
Simple and efficient.
Constant time insertion and removal of top element.
Useful for function calls, expression evaluation and backtracking.

Real life application:
Function call stack - it executes function call in stack approch.
Undo Mechanism - user can revert its own actions.
Expression evaluation - Compiler used to evaluate the arithmatic expression and check for balanced paranthesis.


Real-Life Application: Function Call Stack
def func1():
    print("Inside func1")
    func2()
    print("Returning from func1")

def func2():
    print("Inside func2")

# Calling func1
func1()



